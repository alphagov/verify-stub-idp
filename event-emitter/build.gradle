import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins { id "com.jfrog.bintray" version "1.8.0" }
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

def buildVersion = "0.0.1-${System.env.BUILD_NUMBER ?: 'SNAPSHOT'}"

group = "uk.gov.ida"
version = "$buildVersion"

repositories {
    if (System.getenv('VERIFY_USE_PUBLIC_BINARIES') == 'true') {
        logger.warn('Production builds MUST NOT be built with public binaries.\nUse artifactory/whitelisted-repos for production builds.\n\n')
        maven { url 'https://dl.bintray.com/alphagov/maven-test' }
        jcenter()
    }
    else {
        maven { url 'https://artifactory.ida.digital.cabinet-office.gov.uk/artifactory/whitelisted-repos' }
    }
}

dependencies {
    compile     'joda-time:joda-time:2.9.9',
                'com.google.inject:guice:4.0',
                'com.google.code.findbugs:jsr305:1.3.9',
                'com.amazonaws:aws-java-sdk-s3:1.11.277',
                'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.8.10',
                'uk.gov.ida:dropwizard-logstash:1.3.5-70'

    testCompile 'junit:junit:4.12',
                'uk.gov.ida:common-test-utils:2.0.0-44',
                'org.assertj:assertj-core:3.9.0',
                'org.mockito:mockito-core:1.9.5',
                'nl.jqno.equalsverifier:equalsverifier:2.4.7',
                'org.json:json:20180130'
}

allprojects {
    task resolveDependencies {
        doLast {
            configurations.all { it.isCanBeResolved() && it.resolve() }
        }
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

tasks.withType(Test) {
    testLogging {
        events  TestLogEvent.FAILED,
                TestLogEvent.PASSED,
                TestLogEvent.SKIPPED,
                TestLogEvent.STANDARD_ERROR
        exceptionFormat TestExceptionFormat.FULL
        showExceptions true
        showCauses true
        showStackTraces true

        afterSuite { desc, result ->
            if (!desc.parent) {
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}

publishing {
    repositories {
        maven {
            credentials {
                username "${System.env.ARTIUSER}"
                password "${System.env.ARTIPASSWORD}"
            }
            url "https://artifactory.ida.digital.cabinet-office.gov.uk/artifactory/libs-release-local"
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId = "uk.gov.ida"
            artifactId = "verify-event-emitter"

            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['mavenJava']
    publish = true
    pkg {
        repo = 'maven-test'
        name = 'verify-event-emitter'
        userOrg = 'alphagov'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/alphagov/verify-event-emitter.git'
        version {
            name = "$buildVersion"
        }
    }
}


